@using Newtonsoft.Json
@{
    var stockCode = ViewData["StockCode"]?.ToString();
    var analysisJson = ViewData["StockAnalysis"]?.ToString();
    var analysisData = analysisJson != null ? JsonConvert.DeserializeObject<Dictionary<string, Dictionary<string, int>>>(analysisJson) : null;
}

<div class="container mt-5">
    <div class="text-center mb-4">
        <h2>Stock Analysis for @stockCode</h2>
    </div>

    <div class="row">
        @if (analysisData != null)
        {
            <div class="col-md-3 mb-3">
                <div class="card shadow-sm">
                    <div class="card-header" style="background-color: rgba(75, 192, 192, 0.6);">
                        <h5 class="text-white text-center">Overall Signals</h5>
                    </div>
                    <div class="card-body text-center">
                        <p><strong>Buy:</strong> @analysisData["overallSignals"]["Buy"]</p>
                        <p><strong>Sell:</strong> @analysisData["overallSignals"]["Sell"]</p>
                        <p><strong>Neutral:</strong> @analysisData["overallSignals"]["Neutral"]</p>
                    </div>
                </div>
            </div>

            <div class="col-md-3 mb-3">
                <div class="card shadow-sm">
                    <div class="card-header" style="background-color: rgba(255, 99, 132, 0.6);">
                        <h5 class="text-white text-center">Day Signals</h5>
                    </div>
                    <div class="card-body text-center">
                        <p><strong>Buy:</strong> @analysisData["daySignals"]["Buy"]</p>
                        <p><strong>Sell:</strong> @analysisData["daySignals"]["Sell"]</p>
                        <p><strong>Neutral:</strong> @analysisData["daySignals"]["Neutral"]</p>
                    </div>
                </div>
            </div>

            <div class="col-md-3 mb-3">
                <div class="card shadow-sm">
                    <div class="card-header" style="background-color: rgba(255, 206, 86, 0.6);">
                        <h5 class="text-white text-center">Week Signals</h5>
                    </div>
                    <div class="card-body text-center">
                        <p><strong>Buy:</strong> @analysisData["weekSignals"]["Buy"]</p>
                        <p><strong>Sell:</strong> @analysisData["weekSignals"]["Sell"]</p>
                        <p><strong>Neutral:</strong> @analysisData["weekSignals"]["Neutral"]</p>
                    </div>
                </div>
            </div>

            <div class="col-md-3 mb-3">
                <div class="card shadow-sm">
                    <div class="card-header" style="background-color: rgba(173, 216, 230, 0.6);">
                        <h5 class="text-white text-center">Month Signals</h5>
                    </div>
                    <div class="card-body text-center">
                        <p><strong>Buy:</strong> @analysisData["monthSignals"]["Buy"]</p>
                        <p><strong>Sell:</strong> @analysisData["monthSignals"]["Sell"]</p>
                        <p><strong>Neutral:</strong> @analysisData["monthSignals"]["Neutral"]</p>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="col-md-12">
                <div class="alert alert-danger text-center">
                    No data available.
                </div>
            </div>
        }
    </div>

    <div class="row mt-4">
        <div class="col-md-12">
            <h4 class="text-center">Graphical Representation</h4>
            <canvas id="analysisChart"></canvas>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const analysisData = @Html.Raw(JsonConvert.SerializeObject(analysisData));

        const labels = ["Overall", "Day", "Week", "Month"];

        const buyData = [
            analysisData["overallSignals"]?.Buy ?? 0,
            analysisData["daySignals"]?.Buy ?? 0,
            analysisData["weekSignals"]?.Buy ?? 0,
            analysisData["monthSignals"]?.Buy ?? 0
        ];

        const sellData = [
            analysisData["overallSignals"]?.Sell ?? 0,
            analysisData["daySignals"]?.Sell ?? 0,
            analysisData["weekSignals"]?.Sell ?? 0,
            analysisData["monthSignals"]?.Sell ?? 0
        ];

        const neutralData = [
            analysisData["overallSignals"]?.Neutral ?? 0,
            analysisData["daySignals"]?.Neutral ?? 0,
            analysisData["weekSignals"]?.Neutral ?? 0,
            analysisData["monthSignals"]?.Neutral ?? 0
        ];

        const ctx = document.getElementById('analysisChart').getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [
                    {
                        label: 'Buy',
                        data: buyData,
                        backgroundColor: 'rgba(75, 192, 192, 0.6)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    },
                    {
                        label: 'Sell',
                        data: sellData,
                        backgroundColor: 'rgba(255, 99, 132, 0.6)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1
                    },
                    {
                        label: 'Neutral',
                        data: neutralData,
                        backgroundColor: 'rgba(255, 206, 86, 0.6)',
                        borderColor: 'rgba(255, 206, 86, 1)',
                        borderWidth: 1
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top'
                    }
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Period'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Count'
                        },
                        beginAtZero: true
                    }
                }
            }
        });
    });
</script>
